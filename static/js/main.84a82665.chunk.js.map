{"version":3,"sources":["logo.svg","components/Plotting.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","withValue","f","e","target","value","Plotting","props","React","useState","constantCapital","setConstantCapital","variableCapital","setVariableCapital","workingDay","setWorkingDay","className","onChange","name","type","min","step","namax","me","max","htmlFor","theme","VictoryTheme","material","animate","duration","colourScale","week","map","d","x","y","label","chartData","data","i","key","interpolation","labelComponent","variables","s","v","c","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84a82665.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {VictoryChart, VictoryTheme, VictoryStack, VictoryArea, VictoryTooltip} from 'victory';\nimport { Equation, EquationEvaluate, EquationOptions } from 'react-equation'\nimport { defaultVariables, defaultFunctions } from 'equation-resolver'\nimport './Plotting.css';\n\nconst withValue = f => e => f(e.target.value);\n\nexport default function Plotting(props) {\n    const [constantCapital, setConstantCapital] = React.useState(6);\n    const [variableCapital, setVariableCapital] = React.useState(6);\n    const [workingDay, setWorkingDay] = React.useState(12);\n    const chartData = () => {\n        const week = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n        const c = week.map((d) => {\n            return {\n                x: d, \n                y: d*constantCapital,\n                label: \"Constant Capital\"\n            }\n        });\n        const v = week.map((d) => {\n            return {\n                x: d, \n                y: d*variableCapital,\n                label: \"Variable Capital (wages)\"\n            }\n        });\n        const s = week.map((d) => {\n            return {\n                x: d, \n                y: d*(workingDay - variableCapital),\n                label: \"Surplus Value\"\n            }\n        });\n        return [c,v,s];\n    }\n    return (\n        <div className=\"Plotting\">\n            <div className=\"Plotting-params\">\n                <div className=\"Plotting-inputs\">\n                    <input onChange={withValue(setConstantCapital)} value={constantCapital} name=\"c\" type=\"number\" min={0} step={0.5} />\n                    <input onChange={withValue(setVariableCapital)} value={variableCapital} namax={workingDay}me=\"v\" type=\"range\" min={0} max={workingDay} step={0.5} />\n                    <input onChange={withValue(setWorkingDay)} value={workingDay} name=\"w\" type=\"range\" min={variableCapital} max={24} step={1} />        \n                </div>\n                <div className=\"Plotting-labels\">\n                    <label htmlFor=\"c\">Constant capital ({constantCapital} hours)</label>\n                    <label htmlFor=\"v\">Necessary Labour ({variableCapital} hours)</label>\n                    <label htmlFor=\"w\">Working day ({workingDay} hours)</label>\n                </div>\n            </div>\n           <div className=\"Plotting-results\">\n                <div className=\"Plotting-chart\">\n                    <VictoryChart \n                        theme={VictoryTheme.material}\n                        animate={{ duration: 1000 }}\n                        \n                    >\n                        <VictoryStack\n                            colourScale={\"blue\"}\n                            \n                        >\n                            {chartData().map((data, i) => {\n                                return (\n                                    <VictoryArea\n                                        key={i}\n                                        data={data}\n                                        interpolation={\"basis\"}\n                                        labelComponent={<VictoryTooltip/>}\n                                    />\n                                );\n                            })}\n\n                        </VictoryStack>\n                    </VictoryChart>\n               </div>\n               <div className=\"Plotting-equations\">\n                   <h3>Rate of Surplus</h3>\n                    <EquationEvaluate \n                        value=\"s/v\"\n                        variables={{\n                            s: {\n                                type: 'number',\n                                value: (workingDay - variableCapital)\n                            },\n                            v: {\n                                type: 'number',\n                                value: variableCapital\n                            }\n                    }}\n                    />\n                    <h3>Rate of Profit</h3>\n                    <EquationEvaluate \n                        value=\"s/(c+v)\"\n                        variables={{\n                            c: {\n                                type: 'number',\n                                value: constantCapital\n                            },\n                            s: {\n                                type: 'number',\n                                value: (workingDay - variableCapital)\n                            },\n                            v: {\n                                type: 'number',\n                                value: variableCapital\n                            }\n                    }}\n                    />\n                    \n                    \n               </div>\n           </div>\n            \n            \n        </div>\n    );\n}","import React from 'react';\nimport { Equation, EquationEvaluate, EquationOptions } from 'react-equation'\nimport { defaultVariables, defaultFunctions } from 'equation-resolver'\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Plotting from './components/Plotting';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Some notes on Marx</h1>\n      \n      </header>\n      <section className=\"App-section\"> \n        <p>These are some rough notes on Marx, presented with an aim to contextualise some of his equations.</p>\n        <p>Marx's Capital is a critique of existing economic theories. He is influenced in particular by J.S. Mill, Smith &amp; Ricardo, and heavily critical of Malthus, Bentham &amp; others. His approach emphasises the need to take the system as a whole, rather than analysing only partial elements removed from context. Unlike his contemporaries, Marx puts a lot of work into establishing the history and development of the phenomena he analyses, going beyond their superfical, present-day form to investigate how they change. He investigates key characteristics of each historical mode of production in Europe, and explains how each transitioned into the next.</p>\n        <p>Capital is not present throughout history, and economic activity is more than just a series of exchanges. Production and distribution are related. Private property determines distribution. Relations of production shape the legal &amp; cultural system. Unique to capitalism is the emergence of labour as a commodity. As a commodity, it has an apparent equality with respect to buyers and sellers. The buyers pay a given price without distinction as to the political character of the labour recieved. The same labour can be sold to one buyer or another for the same price. This \"equality\" is capitalist \"freedom\".</p>\n        <p>Marx identifies the dual character of commodities - the separation of use value (an object's useful purpose) and exchange value (the proportion at which the commodity can be exchanged for another). Money develops out of the need for a universal equivalent, and in particular circumstances money forms part of Capital. All commodities are produced by human labour. Use values are qualitative, and can't be compared directly - the usefulness of a coat can't be measured in terms of how useful a chair is, and so use is an unsuitable basis for exchange value. Exchange values must quantitative and thus comparable - in a given time and place, coats and chairs may be exchanged for each other in a given proportion. This proportion is determined by the average quantity of labour necessary for the production of each commodity.</p>\n        <p>The Marxist theory of value diverges from other economists. Value corresponds to the labour socially embedded in a commodity, every other consideration is secondary. Marx discusses 'useful labour', which is labour that produces particular use values - the production of things in order to use them. In contrast with 'abstract labour', which is labour that produces exchange values - the production of things in order to sell them. A commodity is anything that is to be exchanged - not used immediately by those involved in its production. Workers purchasing commodities from capitalists leads to the capitalists' economic power becoming greater than the economic power of the workers. A commodity producing society must:</p>\n        \n        <ol>\n          <li>Specialise</li>\n          <li>Seperate use value from exchange value (by producing for exchange &amp; fulfilling use values by acquiring commodities from other producers)</li>\n          <li>Have an extensive, well developed market utilising money as a means of exchange</li>\n        </ol>\n        \n        <p>The social relationship among producers is characterised as follows: the producer's livelihood depends on commodities, but the value is not controlled by producers but by the economic relations of the whole society expressed through the market. Thus relations between producers appear to be relations between things. This produces a false belief in value being created by exchange.</p>\n        <p>The exchange of commodities can be viewed from two perspectives. <span className=\"formula\">C→M→C</span> represents selling a commodity in order to buy another commodity. <span className=\"formula\">M→C→M'</span> represents buying a commodity in order to sell it, transforming money into commodities to make more money. In the sphere of circulation, <span className=\"formula\">M→C→M'</span> is the general formula for <span className=\"term\">Capital</span>. The difference between M and M' is <span className=\"term\">surplus value</span>. The extraction of surplus value is what drives capitalism. Capital is personified in the capitalist, who is compelled to obey the laws of capital. Acquiring use values is not the aim of a capitalist - the sole aim is profit. Profit making is a never ending process.</p>\n        <p>The market does not determine value. In particular, the market is not the source of value. The relations between all buyers and sellers, represented in the market, is a window through which we can view the totality of the relations of a given society that together determine the socially-average quantity of labour necessary for the production of a commodity. It is these relations, and the socially-average necessary quantity of labour in particular, that determine a commodity's value. Labour is the source of all value.</p>\n        <p>The circulation of capital follows three stages. In the first stage, <span className=\"formula\">M→C</span>, the capitalist acquires commodities in the market - a <span className=\"term\">'circulation act'</span>. In the second stage, <span className=\"formula\">P</span>, the purchased commodities are consumed productively, resulting in a commodity of more value than the commodity inputs. In the third stage, <span className=\"formula\">C→M</span>, the capitalist returns to the market and transforms the commodity back into money in another circulation act.</p>\n        <p>Marx's formula for the whole circuit is <span className=\"formula\">M→C…P…C'→M'</span>. The ellipsis indicates that the process of circulation is interrupted, and <span className=\"formula\">C' &amp; M'</span> designate <span className=\"formula\">C &amp; M</span> increased by <span className=\"term\">surplus-value</span>. </p>\n        <p>Labour is found as a commodity on the market when the possessors of labour power put it up for sale. Labour is sold when the sellers have nothing else left to sell, as owning no means of production or subsistance leaves the labourer without a way to exchange commodities for necessary goods, nor to survive or reproduce alone. In this unnatural condition, the labourer has two choices - starve, or sell labour power. Like any commodity, the value of labour power (wages) is determined by the value needed to produce it. For the continuous reproduction of the labourer, this is the value necessary for subsistance, such as food, water, shelter and payment of debts. For labour that requires some degree of education, the value of subsistance incorporates the value of the education. Unique to labour power as a commodity, unlike any other commodity, is that its employment can add more value than it takes to reproduce - this is why it is termed <span className=\"term\"> variable capital</span>. In contrast, all other commodities involved in the production process — the <span className=\"term\">means of production</span> — are termed <span className=\"term\">constant capital</span>. </p>\n        <p>For example, imagine in a particular job it takes 4 hours of labour to produce the value equivalent to the labourers's daily reproduction. This is <span className=\"term\">necessary labour</span>. Any additional labour beyond this is <span className=\"term\">surplus labour</span>. </p>\n\n\n        <Equation value=\"c+v+s\" />\n        <h2>Rate of Surplus-Value</h2>\n        <Equation value=\"s/v = (surplus value) / (variable capital) = (surplus labour) / (necessary labour) = (surplus value) / (value of labour power)\" />\n        <Plotting className=\"App-plot\" />\n</section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}